#!/bin/bash

#https://github.com/alwinkumar/usergrouplist
#31 october 2018, alwinkumar.com
#GPL
#Remember to include both files in the same directory before using this script
#1. usergrouplist.sh
#2. usergrouplistfunctions.sh

clear
printf "usergrouplist from github.com\nList of groups and members\n"
printf "Hostname\t : %s\n" "$HOSTNAME"
printf "System  \t : %s\n" "$(uname -pio)"
printf "Extracted on\t : %s\n" "$(date)"
printf "Generated by\t : %s\n" "$EUID"
printf "Bash version\t : %s \t : %s\n" "$BASH" "$BASH_VERSION"

#_________________________settings
  #hide system users and group
  if [ "$1" = "1" ]; then
    OPTION1=1
  fi

  LOCATIONOFPASSWDFILE="/etc/passwd"
  LOCATIONOFGROUPFILE="/etc/group"

  printf "passwd file\t : %s\n" "$LOCATIONOFPASSWDFILE"
  printf "group file\t : %s\n\n" "$LOCATIONOFGROUPFILE"

#check bash version number
  if [ "$BASH_VERSINFO" -lt "4" ]; then
   printf "Unexpected behaviour using old bash version\nPreferred bash version 4 or later\n\n\n"
  fi

#_________________________functions
. usergrouplistfunctions.sh


#_________________________list of all users
LISTOFUSERS=$(cat $LOCATIONOFPASSWDFILE)

while read -r line1; do
  USERNAME=$(echo $line1 | cut -d':' -f1)
  USER_UID=$(echo $line1 | cut -d':' -f3)
  MEMBERSHIP="$(id -G $USERNAME)"
  MEMBERSHIP_THISUSER=0
  for X in $MEMBERSHIP
  do
    declare -a "group_$X"+="($USERNAME)"
    ((MEMBERSHIP_THISUSER++))
  done
  if [ "$USER_UID" -ge 1000 ]; then
    LISTOFUSERS_REG+=($USERNAME)
    LISTOFUSERS_REG_UID+=($USER_UID)
    LISTOFUSERS_REG_MEM+=("$MEMBERSHIP")
    LISTOFUSERS_REG_MEM2+=("$MEMBERSHIP_THISUSER")
  else
   LISTOFUSERS_SYS+=($USERNAME)
   LISTOFUSERS_SYS_UID+=($USER_UID)
   LISTOFUSERS_SYS_MEM+=("$MEMBERSHIP")
   LISTOFUSERS_SYS_MEM2+=("$MEMBERSHIP_THISUSER")
  fi
done <<< "$LISTOFUSERS"

echo "-------------------------------------------------"

#_________________________list of regular users
printf "\nList of regular users (UID=>1000)\n"
printf "%s\t%s\t%-20s\t%s\t%s\n" "NO." "UID" "NAME" "TOTAL" "MEMBERSHIP (GROUP ID)"
for i in "${!LISTOFUSERS_REG[@]}"; do
  K=$(( $i + 1 ))
  printf "%s\t%s\t%-20s\t%s\t%s\n" "$K" "${LISTOFUSERS_REG_UID[$i]}" "${LISTOFUSERS_REG[$i]}" "${LISTOFUSERS_REG_MEM2[$i]}" "${LISTOFUSERS_REG_MEM[$i]}"
done

#_________________________list of system users
if [ "$OPTION1" != "1" ]; then
  printf "\nList of system users (UID<1000)\n"
  printf "%s\t%s\t%-20s\t%s\t%s\n" "NO." "UID" "NAME" "TOTAL" "MEMBERSHIP (GROUP ID)"
  for i in "${!LISTOFUSERS_SYS[@]}"; do
    K=$(( $i + 1 ))
    printf "%s\t%s\t%-20s\t%s\t%s\n" "$K" "${LISTOFUSERS_SYS_UID[$i]}" "${LISTOFUSERS_SYS[$i]}" "${LISTOFUSERS_SYS_MEM2[$i]}" "${LISTOFUSERS_SYS_MEM[$i]}"
  done
fi

#_________________________get list of all groups
LISTOFGROUPS=$(cat $LOCATIONOFGROUPFILE)

while read -r line; do
  GROUPNAME=$(echo $line | cut -d':' -f1)
  GROUPID=$(echo $line | cut -d':' -f3)
  if [ "$GROUPID" -ge 1000 ]; then
   LISTOFGROUPS_USR_NAME+=($GROUPNAME)
   LISTOFGROUPS_USR_UID+=($GROUPID)
  else
   LISTOFGROUPS_SYS_NAME+=($GROUPNAME)
   LISTOFGROUPS_SYS_UID+=($GROUPID)
  fi
done <<< "$LISTOFGROUPS"


#________________________display user groups
printf "\n--------------------------------------------------\n"
printf "\nList of user groups (GID =>1000)\n"
printf "%s\t%s\t%-20s\t%s\t%s\n" "NO." "GID" "GROUP NAME" "TOTAL" "MEMBERS"
for i in "${!LISTOFGROUPS_USR_NAME[@]}"; do
  K=$(( $i + 1 ))
  GID_THIS="${LISTOFGROUPS_USR_UID[$i]}"
  printf "%s\t%s\t%-20s\t" "$K" "$GID_THIS" "${LISTOFGROUPS_USR_NAME[$i]}"
  listoutusersingroup $GID_THIS $2
done


#________________________display system groups
if [ "$OPTION1" != "1" ]; then
echo
echo "List of system groups"
printf "%s\t%s\t%-20s\t%s\t%s\n" "NO." "GID" "GROUP NAME" "TOTAL" "MEMBERS"
for i in "${!LISTOFGROUPS_SYS_NAME[@]}"; do
  K=$(( $i + 1 ))
  GID_THIS="${LISTOFGROUPS_SYS_UID[$i]}"
  printf "%s\t%s\t%-20s\t" "$K" "$GID_THIS" "${LISTOFGROUPS_SYS_NAME[$i]}"

  listoutusersingroup $GID_THIS $2

done

fi
